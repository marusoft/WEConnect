{"version":3,"sources":["reviewValidator.js"],"names":["ReviewValidator","req","res","next","checkBody","reviewContent","options","errorMessage","isLength","min","max","errors","validationErrors","status","send","message","msg"],"mappings":";;;;;;;;;;AAAA;;;IAGMA,e;;;;;;;;AACJ;;;;;;;gCAOmBC,G,EAAKC,G,EAAKC,I,EAAM;AACjCF,UAAIG,SAAJ,CAAc;AACZC,uBAAe;AACbC,mBAAS,IADI;AAEbC,wBAAc;AAFD,SADH;AAKZC,kBAAU;AACRF,mBAAS,CAAC,EAAEG,KAAK,CAAP,EAAUC,KAAK,GAAf,EAAD,CADD;AAERH,wBAAc;AAFN;AALE,OAAd;AAUA,UAAMI,SAASV,IAAIW,gBAAJ,EAAf;AACA,UAAID,MAAJ,EAAY;AACV,eAAOT,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAASJ,OAAO,CAAP,EAAUK,GAArB,EAArB,CAAP;AACD;AACDb;AACD;;;;;;kBAEYH,e","file":"reviewValidator.js","sourceRoot":"/home/marusoft/Downloads/WEConnect/server/middleware","sourcesContent":["/**\n * @class\n */\nclass ReviewValidator {\n  /**\n   * Checks for the required input fields\n   * @param {object} req - The request object\n   * @param {object} res - The response object\n   * @param {function} next - Calls the next route handler\n   * @returns {object} JSON object representing the failure message\n   */\n  static reviewInput(req, res, next) {\n    req.checkBody({\n      reviewContent: {\n        options: true,\n        errorMessage: 'Content is required'\n      },\n      isLength: {\n        options: [{ min: 6, max: 100 }],\n        errorMessage: 'Content should have between 6 and 1,000'\n      },\n    });\n    const errors = req.validationErrors();\n    if (errors) {\n      return res.status(400).send({ message: errors[0].msg });\n    }\n    next();\n  }\n}\nexport default ReviewValidator;\n"]}