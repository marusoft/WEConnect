{"version":3,"sources":["test.js"],"names":["use","should","describe","newuser","name","emailAddress","password","it","done","request","post","send","end","err","res","have","status","body","be","an","property","user","notUser","email","a","eql","newUser","photo","description","location","category","nodata"],"mappings":";;AAAA;;;;AACA;;;;AAGA;;;;;;AAEA,eAAKA,GAAL;AACA,IAAMC,SAAS,eAAKA,MAAL,EAAf;;AAEAC,SAAS,qBAAT,EAAgC,YAAM;AACpCA,WAAS,aAAT,EAAwB,YAAM;AAC5B,QAAMC,UAAU;AACdC,YAAM,QADQ;AAEdC,oBAAc,kBAFA;AAGdC,gBAAU;AAHI,KAAhB;AAKAC,OAAG,2CAAH,EAAgD,UAACC,IAAD,EAAU;AACxD,qBAAKC,OAAL,kBACGC,IADH,CACQ,qBADR,EAEGC,IAFH,CAEQR,OAFR,EAGGS,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB;AACAA,YAAIb,MAAJ,CAAWc,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,YAAIG,IAAJ,CAAShB,MAAT,CAAgBiB,EAAhB,CAAmBC,EAAnB,CAAsB,QAAtB;AACAL,YAAIG,IAAJ,CAAShB,MAAT,CAAgBc,IAAhB,CAAqBK,QAArB,CAA8B,MAA9B;AACAZ;AACD,OATH;AAUD,KAXD;;AAaAD,OAAG,oCAAH,EAAyC,UAACC,IAAD,EAAU;AACjD,qBAAKC,OAAL,kBACGC,IADH,CACQ,qBADR,EAEGC,IAFH,GAGGC,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,YAAIb,MAAJ,CAAWc,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,YAAIG,IAAJ,CAAShB,MAAT,CAAgBiB,EAAhB,CAAmBC,EAAnB,CAAsB,QAAtB;AACAL,YAAIG,IAAJ,CAAShB,MAAT,CAAgBc,IAAhB,CAAqBK,QAArB,CAA8B,SAA9B;AACAZ;AACD,OARH;AASD,KAVD;AAWD,GA9BD;;AAgCAN,WAAS,wBAAT,EAAmC,YAAM;AACvC,QAAMmB,OAAO;AACXjB,YAAM,UADK;AAEXE,gBAAU;AAFC,KAAb;AAIA,QAAMgB,UAAU;AACdC,aAAO,OADO;AAEdjB,gBAAU;AAFI,KAAhB;AAIAC,OAAG,yDAAH,EAA8D,UAACC,IAAD,EAAU;AACtE,qBAAKC,OAAL,kBACGC,IADH,CACQ,oBADR,EAEGC,IAFH,CAEQU,IAFR,EAGGT,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,YAAIb,MAAJ,CAAWc,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,YAAIG,IAAJ,CAAShB,MAAT,CAAgBiB,EAAhB,CAAmBC,EAAnB,CAAsB,QAAtB;AACD,OANH;AAOAX;AACD,KATD;;AAWAD,OAAG,mDAAH,EAAwD,UAACC,IAAD,EAAU;AAChE,qBAAKC,OAAL,kBACGC,IADH,CACQ,oBADR,EAEGC,IAFH,CAEQW,OAFR,EAGGV,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,YAAIb,MAAJ,CAAWc,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,YAAIG,IAAJ,CAAShB,MAAT,CAAgBiB,EAAhB,CAAmBM,CAAnB,CAAqB,QAArB;AACAV,YAAIG,IAAJ,CAAShB,MAAT,CAAgBiB,EAAhB,CAAmBO,GAAnB,CAAuB,gBAAvB;AACD,OAPH;AAQAjB;AACD,KAVD;AAWD,GA/BD;;AAiCAN,WAAS,kCAAT,EAA6C,YAAM;AACjD,QAAMwB,UAAU;AACdtB,YAAM,YADQ;AAEduB,aAAO,cAFO;AAGdC,mBAAa,iDAHC;AAIdC,gBAAU,cAJI;AAKdC,gBAAU,UALI;AAMdP,aAAO;AANO,KAAhB;AAQA,QAAMQ,SAAS,EAAf;AACAxB,OAAG,mDAAH,EAAwD,UAACC,IAAD,EAAU;AAChE,qBAAKC,OAAL,kBACGC,IADH,CACQ,kBADR,EAEGC,IAFH,CAEQe,OAFR,EAGGd,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,YAAIb,MAAJ,CAAWc,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,YAAIG,IAAJ,CAAShB,MAAT,CAAgBiB,EAAhB,CAAmBC,EAAnB,CAAsB,QAAtB;AACD,OANH;AAOAX;AACD,KATD;;AAWAD,OAAG,uDAAH,EAA4D,UAACC,IAAD,EAAU;AACpE,qBAAKC,OAAL,kBACGC,IADH,CACQ,kBADR,EAEGC,IAFH,CAEQoB,MAFR,EAGGnB,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,YAAIb,MAAJ,CAAWc,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,YAAIG,IAAJ,CAAShB,MAAT,CAAgBiB,EAAhB,CAAmBM,CAAnB,CAAqB,QAArB;AACD,OANH;AAOAhB;AACD,KATD;AAUD,GA/BD;AAgCD,CAlGD","file":"test.js","sourceRoot":"/home/marusoft/Downloads/WEConnect/server/test","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport expect from 'chai';\n\nimport app from '../routes/route';\n\nchai.use(chaiHttp);\nconst should = chai.should();\n\ndescribe('Test all users APIs', () => {\n  describe('/POST route', () => {\n    const newuser = {\n      name: 'solace',\n      emailAddress: 'solace@gmail.com',\n      password: 'alimikehinde',\n    };\n    it('should return successfull with status 200', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signup')\n        .send(newuser)\n        .end((err, res) => {\n          // expect(res.status()).to.be.equal(200);\n          res.should.have.status(201);\n          res.body.should.be.an('object');\n          res.body.should.have.property('user');\n          done();\n        });\n    });\n\n    it('should return with 400 status code', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signup')\n        .send()\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          done();\n        });\n    });\n  });\n\n  describe('/POST route login user', () => {\n    const user = {\n      name: 'marusoft',\n      password: 'marusoft'\n    };\n    const notUser = {\n      email: 'wrong',\n      password: 'fake@gmail.com'\n    };\n    it('shoule return welcome with username and 200 status code', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/login')\n        .send(user)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n        });\n      done();\n    });\n\n    it('should return please sign up with 401 status code', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/login')\n        .send(notUser)\n        .end((err, res) => {\n          res.should.have.status(401);\n          res.body.should.be.a('string');\n          res.body.should.be.eql('please sign up');\n        });\n      done();\n    });\n  });\n\n  describe('/POST route create user business', () => {\n    const newUser = {\n      name: 'SoleRebels',\n      photo: 'footwear.jpg',\n      description: 'a company responsible for the outlook of humans',\n      location: 'Addis Abbaba',\n      category: 'clothing',\n      email: 'solerebels@gmail.com',\n    };\n    const nodata = {};\n    it('should create business and return 201 status code', (done) => {\n      chai.request(app)\n        .post('/api/v1/business')\n        .send(newUser)\n        .end((err, res) => {\n          res.should.have.status(201);\n          res.body.should.be.an('object');\n        });\n      done();\n    });\n\n    it('should not create business but return 401 status code', (done) => {\n      chai.request(app)\n        .post('/api/v1/business')\n        .send(nodata)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n        });\n      done();\n    });\n  });\n});\n"]}